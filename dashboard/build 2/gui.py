
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Label
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import random
import pandas as pd
import numpy as np

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"../build 2/assets/frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("890x550")
window.configure(bg = "#F5E2FF")


canvas = Canvas(
    window,
    bg = "#F5E2FF",
    height = 550,
    width = 890,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    0,
    316.0,
    image=image_image_1
)

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
image_2 = canvas.create_image(
    23.0,
    23.0,
    image=image_image_2
)

canvas.create_text(
    66.0,
    4.0,
    anchor="nw",
    text="Solarpark Neuenhagen",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
image_3 = canvas.create_image(
    522.0,
    289.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
image_4 = canvas.create_image(
    397.0,
    373.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
image_5 = canvas.create_image(
    713.0,
    373.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    396.0,
    402.0,
    image=image_image_6
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    712.0,
    402.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    397.0,
    125.0,
    image=image_image_8
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    713.0,
    125.0,
    image=image_image_9
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    148.0,
    456.0,
    image=image_image_10
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    148.0,
    83.0,
    image=image_image_11
)

image_image_12 = PhotoImage(
    file=relative_to_assets("image_12.png"))
image_12 = canvas.create_image(
    148.0,
    166.0,
    image=image_image_12
)

image_image_13 = PhotoImage(
    file=relative_to_assets("image_13.png"))
image_13 = canvas.create_image(
    148.0,
    249.0,
    image=image_image_13
)

image_image_14 = PhotoImage(
    file=relative_to_assets("image_14.png"))
image_14 = canvas.create_image(
    148.0,
    332.0,
    image=image_image_14
)

image_image_15 = PhotoImage(
    file=relative_to_assets("image_15.png"))
image_15 = canvas.create_image(
    95.0,
    166.0,
    image=image_image_15
)

image_image_16 = PhotoImage(
    file=relative_to_assets("image_16.png"))
image_16 = canvas.create_image(
    95.0,
    83.0,
    image=image_image_16
)

canvas.create_text(
    119.0,
    64.0,
    anchor="nw",
    text="19.04",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    119.0,
    147.0,
    anchor="nw",
    text="19:00",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

text_item1 = canvas.create_text(
    129.0,
    313.0,
    anchor="nw",
    text="39%",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

text_item2 = canvas.create_text(
    98.0,
    445.0,
    anchor="nw",
    text="50%",
    fill="#4D2B61",
    font=("Inter Bold", 48 * -1)
)




canvas.create_text(
    126.0,
    230.0,
    anchor="nw",
    text="14°C",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    313.0,
    230.0,
    anchor="nw",
    text="Leistung",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    126.0,
    395.0,
    anchor="nw",
    text="Akku",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    633.0,
    230.0,
    anchor="nw",
    text="Marktpreis",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    313.0,
    64.0,
    anchor="nw",
    text="Tagesumsatz",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    633.0,
    64.0,
    anchor="nw",
    text="Effektivität",
    fill="#4D2B61",
    font=("Inter Bold", 32 * -1)
)

canvas.create_text(
    363.0,
    118.0,
    anchor="nw",
    text="930€",
    fill="#4D2B61",
    font=("Inter Bold", 48 * -1)
)

image_image_17 = PhotoImage(
    file=relative_to_assets("image_17.png"))
image_17 = canvas.create_image(
    95.0,
    332.0,
    image=image_image_17
)

image_image_18 = PhotoImage(
    file=relative_to_assets("image_18.png"))
image_18 = canvas.create_image(
    95.0,
    250.0,
    image=image_image_18
)

image_image_19 = PhotoImage(
    file=relative_to_assets("image_19.png"))
image_19 = canvas.create_image(
    95.0,
    414.0,
    image=image_image_19
)

image_image_20 = PhotoImage(
    file=relative_to_assets("image_20.png"))
image_20 = canvas.create_image(
    282.0,
    83.0,
    image=image_image_20
)

image_image_21 = PhotoImage(
    file=relative_to_assets("image_21.png"))
image_21 = canvas.create_image(
    318.0,
    147.0,
    image=image_image_21
)

image_image_22 = PhotoImage(
    file=relative_to_assets("image_22.png"))
image_22 = canvas.create_image(
    599.0,
    249.0,
    image=image_image_22
)

image_image_23 = PhotoImage(
    file=relative_to_assets("image_23.png"))
image_23 = canvas.create_image(
    282.0,
    249.0,
    image=image_image_23
)

image_image_24 = PhotoImage(
    file=relative_to_assets("image_24.png"))
image_24 = canvas.create_image(
    599.0,
    83.0,
    image=image_image_24
)

image_image_25 = PhotoImage(
    file=relative_to_assets("image_25.png"))
image_25 = canvas.create_image(
    712.0,
    150.0,
    image=image_image_25
)

np.random.seed(0)  # Für reproduzierbare Ausgaben
price = pd.read_csv(filepath_or_buffer='price data/output.csv', index_col=0, parse_dates=True)[7000:]
solar = pd.read_csv(filepath_or_buffer='solar efficiency data/solar_efficiency_output.csv', index_col=0, parse_dates=True)

# Globale Variable, um den aktuellen Index zu verfolgen
current_index = 0

def update_plots():
    global current_index
    # Bestimme die zu zeigenden Daten (maximal 20 Werte)
    start_index = max(0, current_index - 14)
    end_index = current_index + 1
    pricedata = price['price'][start_index:end_index]
    solardata = solar['clearsky_ghi'][start_index:end_index]

    # Aktualisiere die Plots mit neuen Daten
    ax1.clear()
    ax1.fill_between(range(len(solardata)), solardata*50, color='#4D2B61')
    ax1.set_ylim(0, 15000)
    canvas1.draw()

    ax2.clear()
    ax2.plot(range(len(pricedata)), pricedata, color='#4D2B61')
    canvas2.draw()

    ax3.clear()
    ax3.fill_between(range(len(solardata)), solardata, color='#4D2B61')
    ax3.set_ylim(0, 100)
    canvas3.draw()

    # Update den aktuellen Index, loop back am Ende des DataFrames
    current_index = (current_index + 1) % len(price)

    # Rufe update_plots nach 1000ms (1 Sekunde) wieder auf
    window.after(50, update_plots)



# Figur 1 Anpassungen
fig1 = Figure(figsize=(2.8, 2.6), facecolor="#FFFFFF")
ax1 = fig1.add_subplot()
ax1.tick_params(labelsize=7, colors='#4D2B61')
# Verwende fill_between anstelle von plot
ax1.fill_between([0,1,2,3,4,5,5,6,7,8,9,10], [0,1,2,3,5,4,5,6,7,8,9,10], color='#4D2B61')
canvas1 = FigureCanvasTkAgg(figure=fig1, master=window)
canvas1.draw()
canvas1.get_tk_widget().place(x=260, y=265)

# Figur 2 Anpassungen
fig2 = Figure(figsize=(2.8, 2.6), facecolor="#FFFFFF")
ax2 = fig2.add_subplot()
ax2.tick_params(labelsize=7, colors='#4D2B61')
# Verwende fill_between anstelle von plot
ax2.plot([0,1,2,3,4,5,5,6,7,8,9,10], [0,1,2,3,5,4,5,6,7,8,9,10], color='#4D2B61')
canvas2 = FigureCanvasTkAgg(figure=fig2, master=window)
canvas2.draw()
canvas2.get_tk_widget().place(x=575, y=265)

# Figur 3 Anpassungen
fig3 = Figure(figsize=(2.8, 0.68), facecolor="#FFFFFF")
ax3 = fig3.add_subplot()
ax3.tick_params(labelsize=7, colors='#4D2B61')
# Verwende fill_between anstelle von plot
ax3.fill_between([0,1,2,3,4,5,5,6,7,8,9,10], [0,1,2,3,5,4,5,6,7,8,9,10], color='#4D2B61')
canvas3 = FigureCanvasTkAgg(figure=fig3, master=window)
canvas3.draw()
canvas3.get_tk_widget().place(x=575, y=117)

update_plots()


window.resizable(False, False)
window.mainloop()